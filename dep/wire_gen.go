// Code generated by Wire. DO NOT EDIT.

//go:generate go run github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package dep

import (
	"go-rengan/pkg/amqp"
	"go-rengan/pkg/logger"
	"go-rengan/pkg/mongodb"
	"go-rengan/pkg/server"
	"go-rengan/pkg/server/http"
	"go-rengan/pkg/tracing"
	"go-rengan/todo/delivery/amqp"
	"go-rengan/todo/delivery/http"
	"go-rengan/todo/publisher"
	"go-rengan/todo/repository"
	"go-rengan/todo/service"
)

// Injectors from wire.go:

func InitializeServer() (*server.ServerImpl, error) {
	tracingTracing, err := tracing.New()
	if err != nil {
		return nil, err
	}
	loggerLogger := logger.New()
	amqpAMQP, err := amqp.New()
	if err != nil {
		return nil, err
	}
	amqpConsumer := amqpdelivery.New(loggerLogger, tracingTracing, amqpAMQP)
	mongoDB, err := mongodb.New(loggerLogger)
	if err != nil {
		return nil, err
	}
	repositoryRepository := repository.New(mongoDB)
	amqpPublisher := amqppublisher.New(loggerLogger, tracingTracing, amqpAMQP)
	serviceService := service.New(tracingTracing, repositoryRepository, amqpPublisher)
	httpHandler := httpdelivery.New(tracingTracing, serviceService)
	httpServer := httpserver.New(loggerLogger, httpHandler)
	serverImpl := server.NewServer(tracingTracing, loggerLogger, amqpAMQP, amqpConsumer, mongoDB, httpServer)
	return serverImpl, nil
}
